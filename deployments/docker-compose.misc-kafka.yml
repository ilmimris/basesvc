version: "3"
services:
  api:
  consumer:
  postgres:
  mongo:
  redis:
  zoo:
  kafka:
  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:5.5.1
    container_name: kafka-schema-registry
    ports:
      - "8081:8081"
    environment:
        SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:19092
        SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
        SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zoo
      - kafka

  schema-registry-ui:
    image: landoop/schema-registry-ui:0.9.5
    container_name: kafka-schema-registry-ui
    ports:
      - "8001:8000"
    environment:
        SCHEMAREGISTRY_URL: http://kafka-schema-registry:8081/
        PROXY: "true"
    depends_on:
      - kafka-schema-registry

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:5.5.1
    container_name: kafka-rest-proxy
    ports:
      - "8082:8082"
    environment:
        # KAFKA_REST_ZOOKEEPER_CONNECT: zoo1:2181
        KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
        KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/
        KAFKA_REST_HOST_NAME: kafka-rest-proxy
        KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:19092
    depends_on:
      - zoo
      - kafka
      - kafka-schema-registry
        
    
  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.4
    container_name: kafka-topics-ui
    ports:
      - "8000:8000"
    environment:
        KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082/"
        PROXY: "true"
    depends_on:
        - zoo
        - kafka  
        - kafka-schema-registry  
        - kafka-rest-proxy                         
          
  kafka-connect:
    image: confluentinc/cp-kafka-connect:5.5.1                                   
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
        CONNECT_BOOTSTRAP_SERVERS: "kafka:19092"        
        CONNECT_REST_PORT: 8083                          
        CONNECT_GROUP_ID: compose-connect-group                                   
        CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
        CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
        CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
        CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
        CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
        CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
        CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'                                                              
        CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
        CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
        CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
        CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
        CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
        CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
        CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
        CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
        CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka-connect/jars'
    volumes:
      - kafka_connector:/etc/kafka-connect/jars/

    depends_on:
      - zoo
      - kafka  
      - kafka-schema-registry
      - kafka-rest-proxy

  kafka-connect-ui:
    image: landoop/kafka-connect-ui:0.9.7
    container_name: kafka-connect-ui
    ports:
      - "8003:8000"
    environment:
        CONNECT_URL: "http://kafka-connect:8083/"
        PROXY: "true"
    depends_on:
      - kafka-connect
        
  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:5.5.1
    container_name: ksqldb-server
    ports:
      - "8088:8088"
    environment:
        KSQL_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:19092
        KSQL_LISTENERS: http://0.0.0.0:8088/                                         
        KSQL_KSQL_SERVICE_ID: ksqldb-server_
    depends_on:
      - zoo
      - kafka
    
  zoonavigator:
    image: elkozmon/zoonavigator:0.8.0
    ports:
      - "8004:8000"    
    environment:
        HTTP_PORT: 8000
        AUTO_CONNECT_CONNECTION_STRING: zoo:2181


volumes:
  kafka_connector:
