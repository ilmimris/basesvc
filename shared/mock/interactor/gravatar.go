// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/iwanjunaid/basesvc/usecase/gravatar/interactor (interfaces: GravatarInteractor)

// Package interactor is a generated GoMock package.
package interactor

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	model "github.com/iwanjunaid/basesvc/domain/model"
	reflect "reflect"
)

// MockGravatarInteractor is a mock of GravatarInteractor interface
type MockGravatarInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockGravatarInteractorMockRecorder
}

// MockGravatarInteractorMockRecorder is the mock recorder for MockGravatarInteractor
type MockGravatarInteractorMockRecorder struct {
	mock *MockGravatarInteractor
}

// NewMockGravatarInteractor creates a new mock instance
func NewMockGravatarInteractor(ctrl *gomock.Controller) *MockGravatarInteractor {
	mock := &MockGravatarInteractor{ctrl: ctrl}
	mock.recorder = &MockGravatarInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGravatarInteractor) EXPECT() *MockGravatarInteractorMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockGravatarInteractor) Get(arg0 context.Context, arg1 string) (*model.GravatarProfiles, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*model.GravatarProfiles)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockGravatarInteractorMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockGravatarInteractor)(nil).Get), arg0, arg1)
}
